h1 Prepr Tagapp
p This document provides an overview of the prepr tag app mobile application. 
p The application is meant to be able to scan QR codes and render associated content on a smart TV
p The application is segregated into three main parts. 
ol
	li Mobile application
	li Prepr platform
	li Server responsible for rendering views on the TV and keeping a record of QR code key values

h2 1. Mobile Application Views
p The mobile application has 4 main views.
ul
	li Login
	li Barcode Scanner
	li History
	li Dashboard
p The login page is shown to new users of the application and acts 
| as an access portal. Authentication was handled by posting user input to the wordpress site, then inspecting the response.
p The barcode scanner consists of the cordova camera API and a java zxing library included into the project. 
| The page consists of a button to scan barcodes, and selection options for different content types for the barcodes. 
p The history page lists the content of previously scanned codes and their scanned dates. 
p The dashboard page acts as an iframe to the online dashboard/content/control panel available at the Prepr main site for authenticated users.

h2 2. Server Architecture
p The mobile application relies on the existence of two external service servers. 
ol
	li Prepr main site/ prepr wordpress site
	li Barcode key-value database and API
p 1. The main prepr platform is used for user authentication and as a content source for the dashboard view. 
p 2. The barcode key-value db and api stores corresponding data for keys stored in the barcodes and renders requested data.
| It consists of three views.
ul
	li TV name registration page
	li Empty template view
	li Rendered template view
p The user first goes to the TV name registration page at url say www.prepr.com/tv
p On registering a TV name the empty template view is loaded.
p The user enters their TV name and scans a QR code.
p On a server API access event i.e. a POST to the server, the data associated with the scanned QR code key is rendered. This data can be anything from a URL (e.g. youtube videos) to text content.
p On subsequent QR code scans the server destroys its current rendered template and renders the newly sent data. 

h2 3. Technical Overview
h3 1. Prepr platform/main site
p Unknown, most likely PHP, not much control over the source code. 
h3 2. API server, QR code key value DB
p The server is written in plain javascript and uses Express for the server and APIs. The database is PostgreSQL and consists of two columns, key and value.
p The code is currently available opensourced on Github on the accounts of Matthew Miller and Kaustav Haldar. The tested deployment exists only on a heroku node owned by M. Miller.
h3 3. Mobile application
p The mobile application is written using an old version of Cordova. It is written in modern web technologies namely HTML, CSS and JS. It leverages:
ul
	li Cordova barcodescanner API for scanning QR codes
	li SQLite for history storage
	li jQmobile for UI and structure

h2 4. Process
p The process involved in using the app: 
ol
	li User opens app on phone
	li Logs in using their prepr credentials
	li The app checks that the user is registered with Prepr 
	li User starts TV, navigates to the servers view page, e.g. www.prepr.com/tv
	li Selects/enters a TV name of their choosing
	li The TV browsers redirects to a empty template viewing page e.g. www.prepr.com/tv/example where example was the selected TV name
	li User enters the TV name on the mobile app
	li Scans a QR code
	li The mobile application sends a HTTP POST request with the key encoded in the barcode and the selected TV name to the server e.g {name: 'example', item: '1'} or in url form "www.prepr.com/tv/?name='example'&item='1'"
	li The server searches the DB for the received key and renders the associated content into the view. I.E www.prepr.com/tv/example would start playing a youtube video at this point if we assumed we have '1': 'someYoutubeUrl' in the DB
	LI The mobile application creates an independent frame within pointing at the server view rendered on the TV though it can be configured to point to a different view or allow control of the TV view. 